---
import MainLayout from "@layouts/main.astro";

// sections
import HeroSection from "../sections/hero.astro";
import Forwardection from "../sections/forward.astro";
import OverviewSection from "../sections/overview.astro";
import TheorySection from "../sections/theory.astro";
import TestimonialsSection from "../sections/testimonials.astro";
import CondomsSection from "../sections/condoms.astro";
import ChartSection from "../sections/chart.astro";
import MissingInActionSection from "../sections/missinginaction.astro";
import StiHivSection from "../sections/stihiv.astro";
import ClosingRemarks from "../sections/closingremarks.astro";
import Footer from "../sections/footer/index.astro";
---

<style is:global>
  /* Register your custom font family and tell the browser where to find it. */
  @font-face {
    font-family: "Almarai";
    src: url("/fonts/Almarai.woff") format("woff");
    font-display: swap;
  }

  .swiper-pagination-bullet-active {
    background-color: #800001;
  }

  * {
    -webkit-tap-highlight-color: transparent;
  }

  *::-webkit-scrollbar {
    display: none !important;
  }

  lite-youtube {
    position: relative;
    display: block;
    contain: content;
    background-position: center center;
    background-size: cover;
    cursor: pointer;
    width: 101%;
}


  /* responsive iframe with a 16:9 aspect ratio
      thanks https://css-tricks.com/responsive-iframes/
  */
  lite-youtube::after {
      content: "";
      display: block;
      padding-bottom: calc(100% / (16 / 9));
  }

  lite-youtube > iframe {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      border: 0;
  }

  /* play button */
  lite-youtube > .lty-playbtn {
      display: block;
      width: 68px;
      height: 48px;
      position: absolute;
      cursor: pointer;
      transform: translate3d(-50%, -50%, 0);
      top: 50%;
      left: 50%;
      z-index: 1;
      background-color: transparent;
      /* YT's actual play button svg */
      background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 68 48"><path d="M66.52 7.74c-.78-2.93-2.49-5.41-5.42-6.19C55.79.13 34 0 34 0S12.21.13 6.9 1.55c-2.93.78-4.63 3.26-5.42 6.19C.06 13.05 0 24 0 24s.06 10.95 1.48 16.26c.78 2.93 2.49 5.41 5.42 6.19C12.21 47.87 34 48 34 48s21.79-.13 27.1-1.55c2.93-.78 4.64-3.26 5.42-6.19C67.94 34.95 68 24 68 24s-.06-10.95-1.48-16.26z" fill="red"/><path d="M45 24 27 14v20" fill="white"/></svg>');
      filter: grayscale(100%);
      transition: filter .1s cubic-bezier(0, 0, 0.2, 1);
      border: none;
  }

  lite-youtube:hover > .lty-playbtn,
  lite-youtube .lty-playbtn:focus {
      filter: none;
  }

  /* Post-click styles */
  lite-youtube.lyt-activated {
      cursor: unset;
  }
  lite-youtube.lyt-activated::before,
  lite-youtube.lyt-activated > .lty-playbtn {
      opacity: 0;
      pointer-events: none;
  }

  .lyt-visually-hidden {
      clip: rect(0 0 0 0);
      clip-path: inset(50%);
      height: 1px;
      overflow: hidden;
      position: absolute;
      white-space: nowrap;
      width: 1px;
    }

</style>

<MainLayout title="Sex Lives Report 2023 by LetsStopAIDS">
  <HeroSection />
  
  <Forwardection />
  <OverviewSection />
  <div class="w-full flex justify-center items-center bg-floral-white py-[10vh]">
    <div class="w-[90vw] lg:w-[60vw] ">
      <lite-youtube
        videoid="Pt2O1s_wP-Q"
        style="background-image: url('https://res.cloudinary.com/dsvly11gz/image/upload/f_auto,q_auto/v1/SexLivesReport/rv6ngpbbrch6ccso62if');"
      >
        <a
          href="https://youtube.com/watch?v=Pt2O1s_wP-Q"
          class="lty-playbtn"
          title="Play Video"
        >
          <span class="lyt-visually-hidden">
            SexLivesReport - We've Got Questions
          </span>
        </a>
      </lite-youtube>
    </div>
  </div>
  <TheorySection />
  <TestimonialsSection />
  <MissingInActionSection />
  <CondomsSection />
  <StiHivSection />
  <ChartSection />
  <ClosingRemarks />
  <Footer />
  <script
    is:inline
    src="https://cdn.jsdelivr.net/npm/locomotive-scroll@beta/bundled/locomotive-scroll.min.js"
  ></script>
  <script async>
    (function () {
      const locomotiveScroll = new LocomotiveScroll({
        autoResize: false,
      });

      window.addEventListener(
        "resize",
        locomotiveScroll.resize.bind(locomotiveScroll)
      );
    })();
  </script>
  
  
   <script
    is:inline
    src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>

  <script defer>
    new Swiper(".swiper", {
      loop: true,
      pagination: {
        el: ".swiper-pagination",
        clickable: true,
      },
      autoplay: {
        delay: 6000,
      },
    });
  </script>

  <script is:inline src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script
    is:inline
    src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2 "></script>

  <script defer>
    const getOrCreateLegendList = (chart, id) => {
      const legendContainer = document.getElementById(id);

      let listContainer = legendContainer.querySelector("ul");

      if (!listContainer) {
        listContainer = document.createElement("ul");
        listContainer.style.display = "flex";
        listContainer.style.flexDirection = "row";
        listContainer.style.margin = 0;
        listContainer.style.padding = 0;

        legendContainer.appendChild(listContainer);
      }

      return listContainer;
    };

    const htmlLegendPlugin = {
      id: "htmlLegend",
      afterUpdate(chart, args, options) {
        const ul = getOrCreateLegendList(chart, options.containerID);

        // Remove old legend items
        while (ul.firstChild) {
          ul.firstChild.remove();
        }

        // Reuse the built-in legendItems generator
        const items = chart.options.plugins.legend.labels.generateLabels(chart);

        items.forEach((item) => {
          const li = document.createElement("li");
          li.style.alignItems = "center";
          li.style.cursor = "pointer";
          li.style.display = "flex";
          li.style.flexDirection = "row";
          li.style.marginLeft = "10px";

          li.onclick = () => {
            const { type } = chart.config;
            if (type === "pie" || type === "doughnut") {
              // Pie and doughnut charts only have a single dataset and visibility is per item
              chart.toggleDataVisibility(item.index);
            } else {
              chart.setDatasetVisibility(
                item.datasetIndex,
                !chart.isDatasetVisible(item.datasetIndex)
              );
            }
            chart.update();
          };

          // Color box
          const boxSpan = document.createElement("span");
          boxSpan.style.background = item.fillStyle;
          boxSpan.style.borderColor = item.strokeStyle;
          boxSpan.style.borderWidth = item.lineWidth + "px";
          boxSpan.style.display = "inline-block";
          boxSpan.style.flexShrink = 0;
          boxSpan.style.height = "20px";
          boxSpan.style.marginRight = "10px";
          boxSpan.style.width = "20px";

          // Text
          const textContainer = document.createElement("p");
          textContainer.style.color = item.fontColor;
          textContainer.style.margin = 0;
          textContainer.style.padding = 0;
          textContainer.style.textDecoration = item.hidden
            ? "line-through"
            : "";

          const text = document.createTextNode(item.text);
          textContainer.appendChild(text);

          li.appendChild(boxSpan);
          li.appendChild(textContainer);
          ul.appendChild(li);
        });
      },
    };

    const ctx = document.getElementById("myChart");
    const sizeFn = function (context) {
      const width = context?.chart.width;
      const size = width > 600 ? 18 : 6;
      return size;
    };

    new Chart(ctx, {
      type: "bar",
      data: {
        labels: [
          "Gonorrhea",
          "Chlamydia",
          "Hepatitis B",
          "HIV",
          "syphylis",
          "Herpes simplex virus",
          "hpv",
          "prefer not to answer",
        ],
        datasets: [
          {
            label: "2022",
            data: [[54], [13], [11], [8], [7], [6], [3], [12]],
            backgroundColor: "#800001",
            datalabels: {
              align: "end",
              anchor: "end",
              display: true,
              color: "#250101",
              font: {
                size: (function (context) {
                  const width = window.innerWidth;
                  const size = width > 600 ? 14 : 6;
                  return size;
                })(),
                weight: 800,
                family: "Libre Franklin",
              },
              formatter: function (value) {
                return `${value}%`;
              },
              labels: {
                title: {
                  font: {
                    weight: "bold",
                  },
                },
              },
            },
          },
          {
            label: "2023",
            data: [[24], [26], [11], [8], [6], [11], [8], [35]],
            backgroundColor: "#250101",
            datalabels: {
              align: "end",
              anchor: "end",
              display: true,
              color: "#250101",
              font: {
                size: (function (context) {
                  const width = window.innerWidth;
                  const size = width > 600 ? 14 : 6;
                  return size;
                })(),
                weight: 800,
                family: "Libre Franklin",
              },
              formatter: function (value) {
                return `${value}%`;
              },
              labels: {
                title: {
                  font: {
                    weight: "bold",
                  },
                },
              },
            },
          },
        ],
      },
      options: {
        indexAxis: "y",
        responsive: true,
        normalized: true,
        maintainAspectRatio: false,
        plugins: {
          htmlLegend: {
            containerID: "legend-container",
          },
          legend: {
            display: false,
          },
        },
      },
      plugins: [ChartDataLabels, htmlLegendPlugin],
    });
  </script>
 
  

  <script
    is:inline
    src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"
  ></script>
  <script
    is:inline
    src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"
  ></script>

  <script async>
    gsap.registerPlugin(ScrollTrigger);

    gsap.utils.toArray(".section").forEach((section) => {
      gsap.from(section.querySelectorAll(".animate-presense"), {
        scrollTrigger: {
          trigger: section,
          start: "top 50%",
        },
        autoAlpha: 0,
        y: 25,
        duration: 0.75,
        stagger: 0.25,
      });

      gsap.from(section.querySelectorAll(".arrow"), {
        scrollTrigger: {
          trigger: section,
          start: "top 50%",
        },
        autoAlpha: 0,
        transformOrigin: "center top",
        scaleY: 0,
        duration: 2,
      });
    });
  </script>
</MainLayout>
